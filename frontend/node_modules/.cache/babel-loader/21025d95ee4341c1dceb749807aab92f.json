{"ast":null,"code":"import moment from'moment';// Get visible expenses\nvar visibleExpenses=function visibleExpenses(expenses,_ref){var text=_ref.text,sortBy=_ref.sortBy,startDate=_ref.startDate,endDate=_ref.endDate;return expenses.filter(function(expense){var createdAtMoment=moment(expense.createdAt);var startDateMatch=startDate?startDate.isSameOrBefore(createdAtMoment,'day'):true;var endDateMatch=endDate?endDate.isSameOrAfter(createdAtMoment,'day'):true;var textMatch=text.length===0||expense.description.toLowerCase().includes(text.toLowerCase());return startDateMatch&&endDateMatch&&textMatch;}).sort(function(a,b){if(sortBy==='date'){return a.createdAt<b.createdAt?1:-1;}else if(sortBy==='amount'){return a.amount<b.amount?1:-1;}});};export default visibleExpenses;","map":{"version":3,"sources":["C:/Users/OLUWAKEMI/Desktop/budget/frontend/src/selectors/expenses.js"],"names":["moment","visibleExpenses","expenses","text","sortBy","startDate","endDate","filter","expense","createdAtMoment","createdAt","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","textMatch","length","description","toLowerCase","includes","sort","a","b","amount"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,QAAnB,CAEA;AACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,QAAD,MAAoD,IAAvCC,CAAAA,IAAuC,MAAvCA,IAAuC,CAAjCC,MAAiC,MAAjCA,MAAiC,CAAzBC,SAAyB,MAAzBA,SAAyB,CAAdC,OAAc,MAAdA,OAAc,CAC1E,MAAOJ,CAAAA,QAAQ,CACZK,MADI,CACG,SAACC,OAAD,CAAa,CACnB,GAAMC,CAAAA,eAAe,CAAGT,MAAM,CAACQ,OAAO,CAACE,SAAT,CAA9B,CACA,GAAMC,CAAAA,cAAc,CAAGN,SAAS,CAC5BA,SAAS,CAACO,cAAV,CAAyBH,eAAzB,CAA0C,KAA1C,CAD4B,CAE5B,IAFJ,CAGA,GAAMI,CAAAA,YAAY,CAAGP,OAAO,CACxBA,OAAO,CAACQ,aAAR,CAAsBL,eAAtB,CAAuC,KAAvC,CADwB,CAExB,IAFJ,CAGA,GAAMM,CAAAA,SAAS,CACbZ,IAAI,CAACa,MAAL,GAAgB,CAAhB,EACAR,OAAO,CAACS,WAAR,CAAoBC,WAApB,GAAkCC,QAAlC,CAA2ChB,IAAI,CAACe,WAAL,EAA3C,CAFF,CAIA,MAAOP,CAAAA,cAAc,EAAIE,YAAlB,EAAkCE,SAAzC,CACD,CAdI,EAeJK,IAfI,CAeC,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACd,GAAIlB,MAAM,GAAK,MAAf,CAAuB,CACrB,MAAOiB,CAAAA,CAAC,CAACX,SAAF,CAAcY,CAAC,CAACZ,SAAhB,CAA4B,CAA5B,CAAgC,CAAC,CAAxC,CACD,CAFD,IAEO,IAAIN,MAAM,GAAK,QAAf,CAAyB,CAC9B,MAAOiB,CAAAA,CAAC,CAACE,MAAF,CAAWD,CAAC,CAACC,MAAb,CAAsB,CAAtB,CAA0B,CAAC,CAAlC,CACD,CACF,CArBI,CAAP,CAsBD,CAvBD,CAyBA,cAAetB,CAAAA,eAAf","sourcesContent":["import moment from 'moment';\r\n\r\n// Get visible expenses\r\nconst visibleExpenses = (expenses, { text, sortBy, startDate, endDate }) => {\r\n  return expenses\r\n    .filter((expense) => {\r\n      const createdAtMoment = moment(expense.createdAt);\r\n      const startDateMatch = startDate\r\n        ? startDate.isSameOrBefore(createdAtMoment, 'day')\r\n        : true;\r\n      const endDateMatch = endDate\r\n        ? endDate.isSameOrAfter(createdAtMoment, 'day')\r\n        : true;\r\n      const textMatch =\r\n        text.length === 0 ||\r\n        expense.description.toLowerCase().includes(text.toLowerCase());\r\n\r\n      return startDateMatch && endDateMatch && textMatch;\r\n    })\r\n    .sort((a, b) => {\r\n      if (sortBy === 'date') {\r\n        return a.createdAt < b.createdAt ? 1 : -1;\r\n      } else if (sortBy === 'amount') {\r\n        return a.amount < b.amount ? 1 : -1;\r\n      }\r\n    });\r\n};\r\n\r\nexport default visibleExpenses;\r\n"]},"metadata":{},"sourceType":"module"}