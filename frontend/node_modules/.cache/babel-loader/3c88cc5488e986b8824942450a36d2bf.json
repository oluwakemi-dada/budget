{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nif ($defineProperty) {\n  try {\n    $defineProperty({}, 'a', {\n      value: 1\n    });\n  } catch (e) {\n    // IE 8 has a broken defineProperty\n    $defineProperty = null;\n  }\n} // node v0.6 has a bug where array lengths can be Set but not Defined\n\n\nvar hasArrayLengthDefineBug = Object.defineProperty && Object.defineProperty([], 'length', {\n  value: 1\n}).length === 0; // eslint-disable-next-line global-require\n\nvar isArray = hasArrayLengthDefineBug && require('../2020/IsArray'); // this does not depend on any other AOs.\n\n\nvar callBound = require('call-bind/callBound');\n\nvar $isEnumerable = callBound('Object.prototype.propertyIsEnumerable'); // eslint-disable-next-line max-params\n\nmodule.exports = function DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, desc) {\n  if (!$defineProperty) {\n    if (!IsDataDescriptor(desc)) {\n      // ES3 does not support getters/setters\n      return false;\n    }\n\n    if (!desc['[[Configurable]]'] || !desc['[[Writable]]']) {\n      return false;\n    } // fallback for ES3\n\n\n    if (P in O && $isEnumerable(O, P) !== !!desc['[[Enumerable]]']) {\n      // a non-enumerable existing property\n      return false;\n    } // property does not exist at all, or exists but is enumerable\n\n\n    var V = desc['[[Value]]']; // eslint-disable-next-line no-param-reassign\n\n    O[P] = V; // will use [[Define]]\n\n    return SameValue(O[P], V);\n  }\n\n  if (hasArrayLengthDefineBug && P === 'length' && '[[Value]]' in desc && isArray(O) && O.length !== desc['[[Value]]']) {\n    // eslint-disable-next-line no-param-reassign\n    O.length = desc['[[Value]]'];\n    return O.length === desc['[[Value]]'];\n  }\n\n  $defineProperty(O, P, FromPropertyDescriptor(desc));\n  return true;\n};","map":{"version":3,"sources":["C:/Users/OLUWAKEMI/Desktop/budget/frontend/node_modules/es-abstract/helpers/DefineOwnProperty.js"],"names":["GetIntrinsic","require","$defineProperty","value","e","hasArrayLengthDefineBug","Object","defineProperty","length","isArray","callBound","$isEnumerable","module","exports","DefineOwnProperty","IsDataDescriptor","SameValue","FromPropertyDescriptor","O","P","desc","V"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,eAAe,GAAGF,YAAY,CAAC,yBAAD,EAA4B,IAA5B,CAAlC;;AAEA,IAAIE,eAAJ,EAAqB;AACpB,MAAI;AACHA,IAAAA,eAAe,CAAC,EAAD,EAAK,GAAL,EAAU;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAV,CAAf;AACA,GAFD,CAEE,OAAOC,CAAP,EAAU;AACX;AACAF,IAAAA,eAAe,GAAG,IAAlB;AACA;AACD,C,CAED;;;AACA,IAAIG,uBAAuB,GAAGC,MAAM,CAACC,cAAP,IAAyBD,MAAM,CAACC,cAAP,CAAsB,EAAtB,EAA0B,QAA1B,EAAoC;AAAEJ,EAAAA,KAAK,EAAE;AAAT,CAApC,EAAkDK,MAAlD,KAA6D,CAApH,C,CAEA;;AACA,IAAIC,OAAO,GAAGJ,uBAAuB,IAAIJ,OAAO,CAAC,iBAAD,CAAhD,C,CAAqE;;;AAErE,IAAIS,SAAS,GAAGT,OAAO,CAAC,qBAAD,CAAvB;;AAEA,IAAIU,aAAa,GAAGD,SAAS,CAAC,uCAAD,CAA7B,C,CAEA;;AACAE,MAAM,CAACC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,gBAA3B,EAA6CC,SAA7C,EAAwDC,sBAAxD,EAAgFC,CAAhF,EAAmFC,CAAnF,EAAsFC,IAAtF,EAA4F;AAC5G,MAAI,CAAClB,eAAL,EAAsB;AACrB,QAAI,CAACa,gBAAgB,CAACK,IAAD,CAArB,EAA6B;AAC5B;AACA,aAAO,KAAP;AACA;;AACD,QAAI,CAACA,IAAI,CAAC,kBAAD,CAAL,IAA6B,CAACA,IAAI,CAAC,cAAD,CAAtC,EAAwD;AACvD,aAAO,KAAP;AACA,KAPoB,CASrB;;;AACA,QAAID,CAAC,IAAID,CAAL,IAAUP,aAAa,CAACO,CAAD,EAAIC,CAAJ,CAAb,KAAwB,CAAC,CAACC,IAAI,CAAC,gBAAD,CAA5C,EAAgE;AAC/D;AACA,aAAO,KAAP;AACA,KAboB,CAerB;;;AACA,QAAIC,CAAC,GAAGD,IAAI,CAAC,WAAD,CAAZ,CAhBqB,CAiBrB;;AACAF,IAAAA,CAAC,CAACC,CAAD,CAAD,GAAOE,CAAP,CAlBqB,CAkBX;;AACV,WAAOL,SAAS,CAACE,CAAC,CAACC,CAAD,CAAF,EAAOE,CAAP,CAAhB;AACA;;AACD,MACChB,uBAAuB,IACpBc,CAAC,KAAK,QADT,IAEG,eAAeC,IAFlB,IAGGX,OAAO,CAACS,CAAD,CAHV,IAIGA,CAAC,CAACV,MAAF,KAAaY,IAAI,CAAC,WAAD,CALrB,EAME;AACD;AACAF,IAAAA,CAAC,CAACV,MAAF,GAAWY,IAAI,CAAC,WAAD,CAAf;AACA,WAAOF,CAAC,CAACV,MAAF,KAAaY,IAAI,CAAC,WAAD,CAAxB;AACA;;AAEDlB,EAAAA,eAAe,CAACgB,CAAD,EAAIC,CAAJ,EAAOF,sBAAsB,CAACG,IAAD,CAA7B,CAAf;AACA,SAAO,IAAP;AACA,CApCD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\n// node v0.6 has a bug where array lengths can be Set but not Defined\nvar hasArrayLengthDefineBug = Object.defineProperty && Object.defineProperty([], 'length', { value: 1 }).length === 0;\n\n// eslint-disable-next-line global-require\nvar isArray = hasArrayLengthDefineBug && require('../2020/IsArray'); // this does not depend on any other AOs.\n\nvar callBound = require('call-bind/callBound');\n\nvar $isEnumerable = callBound('Object.prototype.propertyIsEnumerable');\n\n// eslint-disable-next-line max-params\nmodule.exports = function DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, desc) {\n\tif (!$defineProperty) {\n\t\tif (!IsDataDescriptor(desc)) {\n\t\t\t// ES3 does not support getters/setters\n\t\t\treturn false;\n\t\t}\n\t\tif (!desc['[[Configurable]]'] || !desc['[[Writable]]']) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// fallback for ES3\n\t\tif (P in O && $isEnumerable(O, P) !== !!desc['[[Enumerable]]']) {\n\t\t\t// a non-enumerable existing property\n\t\t\treturn false;\n\t\t}\n\n\t\t// property does not exist at all, or exists but is enumerable\n\t\tvar V = desc['[[Value]]'];\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tO[P] = V; // will use [[Define]]\n\t\treturn SameValue(O[P], V);\n\t}\n\tif (\n\t\thasArrayLengthDefineBug\n\t\t&& P === 'length'\n\t\t&& '[[Value]]' in desc\n\t\t&& isArray(O)\n\t\t&& O.length !== desc['[[Value]]']\n\t) {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tO.length = desc['[[Value]]'];\n\t\treturn O.length === desc['[[Value]]'];\n\t}\n\n\t$defineProperty(O, P, FromPropertyDescriptor(desc));\n\treturn true;\n};\n"]},"metadata":{},"sourceType":"script"}