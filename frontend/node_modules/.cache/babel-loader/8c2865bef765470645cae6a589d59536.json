{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OLUWAKEMI\\\\Desktop\\\\budget\\\\src\\\\components\\\\ExpenseForm.js\";\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport { SingleDatePicker } from 'react-dates';\n\nconst ExpenseForm = _ref => {\n  let {\n    onSubmit,\n    expense\n  } = _ref;\n  // STATE\n  const [description, setDescription] = useState(expense ? expense.description : '');\n  const [note, setNote] = useState(expense ? expense.note : '');\n  const [amount, setAmount] = useState(expense ? (expense.amount / 100).toString() : '');\n  const [createdAt, setCreatedAt] = useState(expense ? moment(expense.createdAt) : moment());\n  const [calenderFocused, setCalenderFocused] = useState(false); // HANDLERS\n\n  const onAmountChangeHandler = e => {\n    let amt = e.target.value;\n\n    if (!amt || amt.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n      setAmount(amt);\n    }\n  };\n\n  const onDateChangeHandler = createdAt => {\n    if (createdAt) setCreatedAt(createdAt);\n  };\n\n  const onFocusChangeHandler = _ref2 => {\n    let {\n      focused\n    } = _ref2;\n    setCalenderFocused(focused);\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n\n    if (!description || !amount) {\n      // 'Please provide description and amount'\n      this.setState(() => ({\n        error: 'Please provide description and amount'\n      }));\n    } else {\n      // Clear error\n      this.setState(() => ({\n        error: ''\n      }));\n      this.props.onSubmit({\n        description: description,\n        amount: parseFloat(amount, 10) * 100,\n        createdAt: createdAt.valueOf(),\n        note: note\n      });\n    } // Send data upstream\n\n\n    onSubmit({\n      description,\n      amount: parseFloat(amount, 10) * 100,\n      createdAt: createdAt.valueOf(),\n      note\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Description\",\n    autoFocus: true,\n    className: \"text-input\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Amount\",\n    className: \"text-input\",\n    value: amount,\n    onChange: e => onAmountChangeHandler(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SingleDatePicker, {\n    date: createdAt,\n    onDateChange: onDateChangeHandler,\n    focused: calenderFocused,\n    onFocusChange: onFocusChangeHandler,\n    numberOfMonths: 1,\n    readOnly: true,\n    isOutsideRange: () => false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Add a note\",\n    className: \"textarea\",\n    value: note,\n    onChange: e => setNote(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"Add Expense\"));\n};\n\nexport default ExpenseForm;","map":{"version":3,"sources":["C:/Users/OLUWAKEMI/Desktop/budget/src/components/ExpenseForm.js"],"names":["React","useState","moment","SingleDatePicker","ExpenseForm","onSubmit","expense","description","setDescription","note","setNote","amount","setAmount","toString","createdAt","setCreatedAt","calenderFocused","setCalenderFocused","onAmountChangeHandler","e","amt","target","value","match","onDateChangeHandler","onFocusChangeHandler","focused","onSubmitHandler","preventDefault","setState","error","props","parseFloat","valueOf"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport moment from 'moment';\r\nimport { SingleDatePicker } from 'react-dates';\r\n\r\nconst ExpenseForm = ({ onSubmit, expense }) => {\r\n  // STATE\r\n  const [description, setDescription] = useState(\r\n    expense ? expense.description : ''\r\n  );\r\n  const [note, setNote] = useState(expense ? expense.note : '');\r\n  const [amount, setAmount] = useState(\r\n    expense ? (expense.amount / 100).toString() : ''\r\n  );\r\n  const [createdAt, setCreatedAt] = useState(\r\n    expense ? moment(expense.createdAt) : moment()\r\n  );\r\n  const [calenderFocused, setCalenderFocused] = useState(false);\r\n\r\n  // HANDLERS\r\n  const onAmountChangeHandler = (e) => {\r\n    let amt = e.target.value;\r\n    if (!amt || amt.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\r\n      setAmount(amt);\r\n    }\r\n  };\r\n\r\n  const onDateChangeHandler = (createdAt) => {\r\n    if (createdAt) setCreatedAt(createdAt);\r\n  };\r\n\r\n  const onFocusChangeHandler = ({ focused }) => {\r\n    setCalenderFocused(focused);\r\n  };\r\n\r\n  const onSubmitHandler = (e) => {\r\n\r\n    e.preventDefault();\r\n    if (!description || !amount) {\r\n      // 'Please provide description and amount'\r\n      this.setState(() => ({\r\n        error: 'Please provide description and amount',\r\n      }));\r\n    } else {\r\n      // Clear error\r\n      this.setState(() => ({\r\n        error: '',\r\n      }));\r\n\r\n      this.props.onSubmit({\r\n        description: description,\r\n        amount: parseFloat(amount, 10) * 100,\r\n        createdAt: createdAt.valueOf(),\r\n        note: note,\r\n      });\r\n    }\r\n    // Send data upstream\r\n    onSubmit({\r\n      description,\r\n      amount: parseFloat(amount, 10) * 100,\r\n      createdAt: createdAt.valueOf(),\r\n      note,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className='form' onSubmit={onSubmitHandler}>\r\n      <input\r\n        type='text'\r\n        placeholder='Description'\r\n        autoFocus\r\n        className='text-input'\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type='text'\r\n        placeholder='Amount'\r\n        className='text-input'\r\n        value={amount}\r\n        onChange={(e) => onAmountChangeHandler(e)}\r\n        required\r\n      />\r\n      <SingleDatePicker\r\n        date={createdAt}\r\n        onDateChange={onDateChangeHandler}\r\n        focused={calenderFocused}\r\n        onFocusChange={onFocusChangeHandler}\r\n        numberOfMonths={1}\r\n        readOnly={true}\r\n        isOutsideRange={() => false}\r\n      />\r\n      <textarea\r\n        placeholder='Add a note'\r\n        className='textarea'\r\n        value={note}\r\n        onChange={(e) => setNote(e.target.value)}\r\n      ></textarea>\r\n      <button className='button'>Add Expense</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}