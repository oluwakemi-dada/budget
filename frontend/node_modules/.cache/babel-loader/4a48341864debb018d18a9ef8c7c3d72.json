{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OLUWAKEMI\\\\Desktop\\\\budget\\\\src\\\\components\\\\ExpenseForm.js\";\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport moment from 'moment';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { SingleDatePicker } from 'react-dates';\n\nconst ExpenseForm = () => {\n  // SELECTORS\n  const expense = useSelector(state => state.expenses); // STATE\n\n  const [description, setDescription] = useState(expense ? expense.description : '');\n  const [note, setNote] = useState(expense ? expense.note : '');\n  const [amount, setAmount] = useState(expense ? (expense.amount / 100).toString() : '');\n  const [createdAt, setCreatedAt] = useState(expense ? moment(expense.createdAt) : moment());\n  const [calenderFocused, setCalenderFocused] = useState(false); // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     description: props.expense ? props.expense.description : \"\",\n  //     note: props.expense ? props.expense.note : \"\",\n  //     amount: props.expense ? (props.expense.amount / 100).toString() : \"\",\n  //     createdAt: props.expense ? moment(props.expense.createdAt) : moment(),\n  //     calenderFocused: false\n  //   };\n  // }\n  // HANDLERS\n\n  const onDescriptionChangeHandler = e => {\n    const description = e.target.value;\n    setDescription({\n      description\n    });\n  };\n\n  const onNoteChangeHandler = e => {\n    const note = e.target.value;\n    setNote({\n      note\n    });\n  };\n\n  const onAmountChangeHandler = e => {\n    const amount = e.target.value;\n    if (!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/)) setAmount({\n      amount\n    });\n  };\n\n  const onDateChangeHandler = createdAt => {\n    if (createdAt) this.setState(() => ({\n      createdAt\n    }));\n  };\n\n  const onFocusChangeHandler = _ref => {\n    let {\n      focused\n    } = _ref;\n    this.setState(() => ({\n      calenderFocused: focused\n    }));\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    this.props.onSubmit({\n      description: this.state.description,\n      amount: parseFloat(this.state.amount, 10) * 100,\n      createdAt: this.state.createdAt.valueOf(),\n      note: this.state.note\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: this.onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Description\",\n    autoFocus: true,\n    className: \"text-input\",\n    value: description,\n    onChange: onDescriptionChangeHandler,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Amount\",\n    className: \"text-input\",\n    value: amount,\n    onChange: onAmountChangeHandler,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SingleDatePicker, {\n    date: createdAt,\n    onDateChange: onDateChangeHandler,\n    focused: calenderFocused,\n    onFocusChange: onFocusChangeHandler,\n    numberOfMonths: 1,\n    readOnly: true,\n    isOutsideRange: () => false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Add a note\",\n    value: note,\n    className: \"textarea\",\n    onChange: onNoteChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"Add Expense\"));\n};\n\nexport default ExpenseForm;","map":{"version":3,"sources":["C:/Users/OLUWAKEMI/Desktop/budget/src/components/ExpenseForm.js"],"names":["useState","useSelector","moment","SingleDatePicker","ExpenseForm","expense","state","expenses","description","setDescription","note","setNote","amount","setAmount","toString","createdAt","setCreatedAt","calenderFocused","setCalenderFocused","onDescriptionChangeHandler","e","target","value","onNoteChangeHandler","onAmountChangeHandler","match","onDateChangeHandler","setState","onFocusChangeHandler","focused","onSubmitHandler","preventDefault","props","onSubmit","parseFloat","valueOf"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport { SingleDatePicker } from 'react-dates';\r\n\r\nconst ExpenseForm = () => {\r\n  // SELECTORS\r\n  const expense = useSelector((state) => state.expenses);\r\n\r\n  // STATE\r\n  const [description, setDescription] = useState(\r\n    expense ? expense.description : ''\r\n  );\r\n  const [note, setNote] = useState(expense ? expense.note : '');\r\n  const [amount, setAmount] = useState(\r\n    expense ? (expense.amount / 100).toString() : ''\r\n  );\r\n  const [createdAt, setCreatedAt] = useState(\r\n    expense ? moment(expense.createdAt) : moment()\r\n  );\r\n  const [calenderFocused, setCalenderFocused] = useState(false);\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     description: props.expense ? props.expense.description : \"\",\r\n  //     note: props.expense ? props.expense.note : \"\",\r\n  //     amount: props.expense ? (props.expense.amount / 100).toString() : \"\",\r\n  //     createdAt: props.expense ? moment(props.expense.createdAt) : moment(),\r\n  //     calenderFocused: false\r\n  //   };\r\n  // }\r\n\r\n  // HANDLERS\r\n  const onDescriptionChangeHandler = (e) => {\r\n    const description = e.target.value;\r\n    setDescription({ description });\r\n  };\r\n\r\n  const onNoteChangeHandler = (e) => {\r\n    const note = e.target.value;\r\n    setNote({ note });\r\n  };\r\n  const onAmountChangeHandler = (e) => {\r\n    const amount = e.target.value;\r\n    if (!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/))\r\n    setAmount({ amount });\r\n  };\r\n  const onDateChangeHandler = (createdAt) => {\r\n    if (createdAt) this.setState(() => ({ createdAt }));\r\n  };\r\n  const onFocusChangeHandler = ({ focused }) => {\r\n    this.setState(() => ({ calenderFocused: focused }));\r\n  };\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit({\r\n      description: this.state.description,\r\n      amount: parseFloat(this.state.amount, 10) * 100,\r\n      createdAt: this.state.createdAt.valueOf(),\r\n      note: this.state.note,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className='form' onSubmit={this.onSubmit}>\r\n      <input\r\n        type='text'\r\n        placeholder='Description'\r\n        autoFocus\r\n        className='text-input'\r\n        value={description}\r\n        onChange={onDescriptionChangeHandler}\r\n        required\r\n      />\r\n      <input\r\n        type='text'\r\n        placeholder='Amount'\r\n        className='text-input'\r\n        value={amount}\r\n        onChange={onAmountChangeHandler}\r\n        required\r\n      />\r\n      <SingleDatePicker\r\n        date={createdAt}\r\n        onDateChange={onDateChangeHandler}\r\n        focused={calenderFocused}\r\n        onFocusChange={onFocusChangeHandler}\r\n        numberOfMonths={1}\r\n        readOnly={true}\r\n        isOutsideRange={() => false}\r\n      />\r\n      <textarea\r\n        placeholder='Add a note'\r\n        value={note}\r\n        className='textarea'\r\n        onChange={onNoteChangeHandler}\r\n      ></textarea>\r\n      <button className='button'>Add Expense</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}